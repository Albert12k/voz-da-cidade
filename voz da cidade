import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Voz da Cidade',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: LoginPage(),
    );
  }
}

// Tela de Login
class LoginPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Login'),
        backgroundColor: Color(0xFF004675),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            TextField(
              decoration: InputDecoration(
                labelText: 'Email',
                border: OutlineInputBorder(borderRadius: BorderRadius.circular(12)),
                contentPadding: EdgeInsets.symmetric(horizontal: 12, vertical: 12),
              ),
            ),
            SizedBox(height: 16),
            TextField(
              obscureText: true,
              decoration: InputDecoration(
                labelText: 'Senha',
                border: OutlineInputBorder(borderRadius: BorderRadius.circular(12)),
                contentPadding: EdgeInsets.symmetric(horizontal: 12, vertical: 12),
              ),
            ),
            SizedBox(height: 24),
            SizedBox(
              width: double.infinity,
              child: ElevatedButton(
                onPressed: () {
                  Navigator.pushReplacement(
                    context,
                    MaterialPageRoute(builder: (context) => AppPrincipalPage()),
                  );
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: Color(0xFF004675),
                  padding: EdgeInsets.symmetric(vertical: 16),
                ),
                child: Text('ENTRAR'),
              ),
            ),
            SizedBox(height: 16),
            TextButton(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => CadastroPage()),
                );
              },
              child: Text(
                'Cadastrar',
                style: TextStyle(color: Color(0xFF4B5320)),
              ),
            ),
            TextButton(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => EsqueciSenhaPage()),
                );
              },
              child: Text(
                'Esqueci a Senha',
                style: TextStyle(color: Color(0xFF4B5320)),
              ),
            ),
          ],
        ),
      ),
    );
  }
}

// Tela de Cadastro
class CadastroPage extends StatefulWidget {
  @override
  _CadastroPageState createState() => _CadastroPageState();
}

class _CadastroPageState extends State<CadastroPage> {
  final _formKey = GlobalKey<FormState>();
  final _nomeController = TextEditingController();
  final _emailController = TextEditingController();
  final _senhaController = TextEditingController();

  String? _validateNome(String? value) {
    if (value == null || value.trim().isEmpty) {
      return 'Por favor, insira seu nome';
    }
    return null;
  }

  String? _validateEmail(String? value) {
    if (value == null || value.trim().isEmpty) {
      return 'Por favor, insira seu email';
    }
    final emailRegex = RegExp(r'^[^@]+@[^@]+\.[^@]+');
    if (!emailRegex.hasMatch(value)) {
      return 'Email inválido';
    }
    return null;
  }

  String? _validateSenha(String? value) {
    if (value == null || value.isEmpty) {
      return 'Por favor, insira uma senha';
    }
    if (value.length < 8) {
      return 'Senha deve ter pelo menos 8 caracteres';
    }
    if (!RegExp(r'[A-Z]').hasMatch(value)) {
      return 'Senha deve conter ao menos uma letra maiúscula';
    }
    if (!RegExp(r'[0-9]').hasMatch(value)) {
      return 'Senha deve conter ao menos um número';
    }
    if (!RegExp(r'[!@#\$&~]').hasMatch(value)) {
      return 'Senha deve conter ao menos um caractere especial (!@#\$&~)';
    }
    return null;
  }

  void _cadastrar() {
    if (_formKey.currentState!.validate()) {
      Navigator.pop(context);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Cadastrar'),
        backgroundColor: Color(0xFF004675),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              TextFormField(
                controller: _nomeController,
                decoration: InputDecoration(
                  labelText: 'Nome',
                  border: OutlineInputBorder(borderRadius: BorderRadius.circular(12)),
                  contentPadding: EdgeInsets.symmetric(horizontal: 12, vertical: 12),
                ),
                validator: _validateNome,
              ),
              SizedBox(height: 16),
              TextFormField(
                controller: _emailController,
                decoration: InputDecoration(
                  labelText: 'Email',
                  border: OutlineInputBorder(borderRadius: BorderRadius.circular(12)),
                  contentPadding: EdgeInsets.symmetric(horizontal: 12, vertical: 12),
                ),
                validator: _validateEmail,
              ),
              SizedBox(height: 16),
              TextFormField(
                controller: _senhaController,
                obscureText: true,
                decoration: InputDecoration(
                  labelText: 'Senha',
                  border: OutlineInputBorder(borderRadius: BorderRadius.circular(12)),
                  contentPadding: EdgeInsets.symmetric(horizontal: 12, vertical: 12),
                ),
                validator: _validateSenha,
              ),
              SizedBox(height: 8),
              Text(
                'Senha deve ter pelo menos 8 caracteres, uma letra maiúscula, um número e um caractere especial (!@#\$&~) .',
                style: TextStyle(color: Colors.grey[700], fontSize: 12),
                textAlign: TextAlign.center,
              ),
              SizedBox(height: 24),
              SizedBox(
                width: double.infinity,
                child: ElevatedButton(
                  onPressed: _cadastrar,
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Color(0xFF004675),
                    padding: EdgeInsets.symmetric(vertical: 16),
                  ),
                  child: Text('CADASTRAR'),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
// Tela de Esqueci a Senha
class EsqueciSenhaPage extends StatefulWidget {
  @override
  _EsqueciSenhaPageState createState() => _EsqueciSenhaPageState();
}

class _EsqueciSenhaPageState extends State<EsqueciSenhaPage> {
  final _formKey = GlobalKey<FormState>();
  final _emailController = TextEditingController();
  bool _isEmailValido = false;

  String? _validateEmail(String? value) {
    if (value == null || value.trim().isEmpty) {
      return 'Por favor, insira seu email';
    }
    final emailRegex = RegExp(r'^[^@]+@[^@]+\.[^@]+');
    if (!emailRegex.hasMatch(value)) {
      return 'Email inválido';
    }
    return null;
  }

  void _onEmailChanged() {
    final isValid = _validateEmail(_emailController.text) == null;
    if (isValid != _isEmailValido) {
      setState(() {
        _isEmailValido = isValid;
      });
    }
  }

  void _enviarEmail() {
    if (_formKey.currentState!.validate()) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Email de recuperação enviado!')),
      );
      Navigator.pop(context);
    }
  }

  @override
  void initState() {
    super.initState();
    _emailController.addListener(_onEmailChanged);
  }

  @override
  void dispose() {
    _emailController.removeListener(_onEmailChanged);
    _emailController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Esqueci a Senha'),
        backgroundColor: Color(0xFF004675),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              TextFormField(
                controller: _emailController,
                decoration: InputDecoration(
                  labelText: 'Email',
                  border: OutlineInputBorder(borderRadius: BorderRadius.circular(12)),
                  contentPadding: EdgeInsets.symmetric(horizontal: 12, vertical: 12),
                ),
                validator: _validateEmail,
                keyboardType: TextInputType.emailAddress,
                autovalidateMode: AutovalidateMode.onUserInteraction,
              ),
              SizedBox(height: 24),
              SizedBox(
                width: double.infinity,
                child: ElevatedButton(
                  onPressed: _isEmailValido ? _enviarEmail : null,
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Color(0xFF004675),
                    padding: EdgeInsets.symmetric(vertical: 16),
                  ),
                  child: Text('ENVIAR'),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// Tela Principal
class AppPrincipalPage extends StatefulWidget {
  @override
  _AppPrincipalPageState createState() => _AppPrincipalPageState();
}

class _AppPrincipalPageState extends State<AppPrincipalPage> {
  int _selectedIndex = 0;
  List<Ocorrencia> _ocorrencias = [
    Ocorrencia(
      titulo: 'Buraco na rua',
      descricao: 'Há um buraco na rua principal.',
      dataHora: DateTime.now(),
      categoria: 'Infraestrutura',
      localizacao: 'Rua Principal',
      comentarios: [
        Comentario(texto: 'É verdade!', dataHora: DateTime.now()),
      ],
      status: 'Aberto',
    ),
    Ocorrencia(
      titulo: 'Falta de iluminação',
      descricao: 'A rua está escura à noite.',
      dataHora: DateTime.now(),
      categoria: 'Iluminação',
      localizacao: 'Rua X',
      comentarios: [],
      status: 'Em andamento',
    ),
  ];

  void _onItemTapped(int index) {
    setState(() {
      _selectedIndex = index;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: _getPage(_selectedIndex),
      bottomNavigationBar: BottomNavigationBar(
        currentIndex: _selectedIndex,
        onTap: _onItemTapped,
        selectedItemColor: Colors.black,
        unselectedItemColor: Colors.grey,
        items: const [
          BottomNavigationBarItem(icon: Icon(Icons.home), label: 'Home'),
          BottomNavigationBarItem(icon: Icon(Icons.event_note), label: 'Eventos'),
          BottomNavigationBarItem(icon: Icon(Icons.add_box), label: 'Nova Ocorrência'),
          BottomNavigationBarItem(icon: Icon(Icons.group), label: 'Comunidade'),
          BottomNavigationBarItem(icon: Icon(Icons.list_alt), label: 'Ocorrências'),
          BottomNavigationBarItem(icon: Icon(Icons.person), label: 'Perfil'),
        ],
      ),
    );
  }

  Widget _getPage(int index) {
    switch (index) {
      case 0:
        return HomePageContent();
      case 1:
        return EventosPageContent();
      case 2:
        return NovaOcorrenciaPage(onOcorrenciaEnviada: (Ocorrencia ocorrencia) {
          setState(() {
            _ocorrencias.add(ocorrencia);
          });
        });
      case 3:
        return MuralComunidade();
      case 4:
        return VisualizarOcorrenciasPage(ocorrencias: _ocorrencias);
      case 5:
        return PerfilUsuarioPage(
          nome: 'Nome do Usuário', // Substitua pelo nome do usuário
          email: 'email@exemplo.com', // Substitua pelo email do usuário
          onSalvar: (nome, email) {
            // Lógica para salvar as informações do perfil
          },
        );
      default:
        return HomePageContent();
    }
  }
}

class HomePageContent extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.all(16.0),
      child: ListView(
        children: [
          Card(
            margin: EdgeInsets.symmetric(vertical: 8),
            child: ListTile(
              title: Text('Notícias da Cidade'),
              subtitle: Text('Fique por dentro das últimas notícias e eventos.'),
              trailing: Icon(Icons.arrow_forward),
              onTap: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => NoticiasPage()),
                );
              },
            ),
          ),
          Card(
            margin: EdgeInsets.symmetric(vertical: 8),
            child: ListTile(
              title: Text('Eventos'),
              subtitle: Text('Veja os próximos eventos na cidade.'),
              trailing: Icon(Icons.arrow_forward),
              onTap: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => EventosPageContent()),
                );
              },
            ),
          ),
          Card(
            margin: EdgeInsets.symmetric(vertical: 8),
            child: ListTile(
              title: Text('Dicas de Segurança'),
              subtitle: Text('Dicas para manter sua segurança e bem-estar.'),
              trailing: Icon(Icons.arrow_forward),
              onTap: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => DicasSegurancaPage()),
                );
              },
            ),
          ),
          Card(
            margin: EdgeInsets.symmetric(vertical: 8),
            child: ListTile(
              title: Text('Serviços Públicos'),
              subtitle: Text('Informações sobre serviços disponíveis na cidade.'),
              trailing: Icon(Icons.arrow_forward),
              onTap: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => ServicosPublicosPage()),
                );
              },
            ),
          ),
        ],
      ),
    );
  }
}

// Tela de Eventos
class EventosPageContent extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Center(
      child: Text('Página de Eventos'),
    );
  }
}

// Tela de Nova Ocorrência
class NovaOcorrenciaPage extends StatefulWidget {
  final Function(Ocorrencia) onOcorrenciaEnviada;

  NovaOcorrenciaPage({required this.onOcorrenciaEnviada});

  @override
  _NovaOcorrenciaPageState createState() => _NovaOcorrenciaPageState();
}

class _NovaOcorrenciaPageState extends State<NovaOcorrenciaPage> {
  final _formKey = GlobalKey<FormState>();
  String? _titulo;
  String? _descricao;
  String? _categoria;
  String? _localizacao;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Nova Ocorrência'),
        backgroundColor: Color(0xFF004675),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              TextFormField(
                decoration: InputDecoration(labelText: 'Título'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Por favor, insira um título';
                  }
                  return null;
                },
                onSaved: (value) => _titulo = value,
              ),
              TextFormField(
                decoration: InputDecoration(labelText: 'Descrição'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Por favor, insira uma descrição';
                  }
                  return null;
                },
                onSaved: (value) => _descricao = value,
              ),
              TextFormField(
                decoration: InputDecoration(labelText: 'Categoria'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Por favor, insira uma categoria';
                  }
                  return null;
                },
                onSaved: (value) => _categoria = value,
              ),
              TextFormField(
                decoration: InputDecoration(labelText: 'Localização'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Por favor, insira uma localização';
                  }
                  return null;
                },
                onSaved: (value) => _localizacao = value,
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () {
                  if (_formKey.currentState!.validate()) {
                    _formKey.currentState!.save();
                    final novaOcorrencia = Ocorrencia(
                      titulo: _titulo!,
                      descricao: _descricao!,
                      dataHora: DateTime.now(),
                      categoria: _categoria!,
                      localizacao: _localizacao!,
                      comentarios: [],
                      status: 'Aberto',
                    );
                    widget.onOcorrenciaEnviada(novaOcorrencia);
                    Navigator.pop(context);
                  }
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: Color(0xFF004675),
                ),
                child: Text('Enviar Ocorrência'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// Tela do Mural da Comunidade
class MuralComunidade extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Center(
      child: Text('Mural da Comunidade'),
    );
  }
}

// Tela de Visualizar Ocorrências
class VisualizarOcorrenciasPage extends StatelessWidget {
  final List<Ocorrencia> ocorrencias;

  VisualizarOcorrenciasPage({required this.ocorrencias});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Ocorrências'),
        backgroundColor: Color(0xFF004675),
      ),
      body: ListView.builder(
        itemCount: ocorrencias.length,
        itemBuilder: (context, index) {
          final ocorrencia = ocorrencias[index];
          return Card(
            margin: EdgeInsets.all(8),
            child: Padding(
              padding: const EdgeInsets.all(16.0),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    ocorrencia.titulo,
                    style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
                  ),
                  SizedBox(height: 8),
                  Text(ocorrencia.descricao),
                  SizedBox(height: 8),
                  Text('Categoria: ${ocorrencia.categoria}'),
                  Text('Localização: ${ocorrencia.localizacao}'),
                  Text('Status: ${ocorrencia.status}'),
                ],
              ),
            ),
          );
        },
      ),
    );
  }
}

// Tela de Perfil do Usuário
class PerfilUsuarioPage extends StatefulWidget {
  final String nome;
  final String email;
  final Function(String, String) onSalvar;

  PerfilUsuarioPage({required this.nome, required this.email, required this.onSalvar});

  @override
  _PerfilUsuarioPageState createState() => _PerfilUsuarioPageState();
}

class _PerfilUsuarioPageState extends State<PerfilUsuarioPage> {
  final _formKey = GlobalKey<FormState>();
  late TextEditingController _nomeController;
  late TextEditingController _emailController;

  @override
  void initState() {
    super.initState();
    _nomeController = TextEditingController(text: widget.nome);
    _emailController = TextEditingController(text: widget.email);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Perfil do Usuário'),
        backgroundColor: Color(0xFF004675),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              TextFormField(
                controller: _nomeController,
                decoration: InputDecoration(labelText: 'Nome'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Por favor, insira seu nome';
                  }
                  return null;
                },
              ),
              TextFormField(
                controller: _emailController,
                decoration: InputDecoration(labelText: 'Email'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Por favor, insira seu email';
                  }
                  return null;
                },
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () {
                  if (_formKey.currentState!.validate()) {
                    widget.onSalvar(_nomeController.text, _emailController.text);
                    ScaffoldMessenger.of(context).showSnackBar(
                      SnackBar(content: Text('Perfil atualizado!')),
                    );
                  }
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: Color(0xFF004675),
                ),
                child: Text('Salvar'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// Tela de Notícias
class NoticiasPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Notícias da Cidade'),
        backgroundColor: Color(0xFF004675),
      ),
      body: Center(
        child: Text('Página de Notícias'),
      ),
    );
  }
}

// Tela de Dicas de Segurança
class DicasSegurancaPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Dicas de Segurança'),
        backgroundColor: Color(0xFF004675),
      ),
      body: Center(
        child: Text('Página de Dicas de Segurança'),
      ),
    );
  }
}

// Tela de Serviços Públicos
class ServicosPublicosPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Serviços Públicos'),
        backgroundColor: Color(0xFF004675),
      ),
      body: Center(
        child: Text('Página de Serviços Públicos'),
      ),
    );
  }
}

class Ocorrencia {
  final String titulo;
  final String descricao;
  final DateTime dataHora;
  final String categoria;
  final String localizacao;
  final List<Comentario> comentarios;
  final String status;

  Ocorrencia({
    required this.titulo,
    required this.descricao,
    required this.dataHora,
    required this.categoria,
    required this.localizacao,
    required this.comentarios,
    required this.status,
  });
}

class Comentario {
  final String texto;
  final DateTime dataHora;

  Comentario({
    required this.texto,
    required this.dataHora,
  });
}
